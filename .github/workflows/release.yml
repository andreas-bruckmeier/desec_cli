on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
  test:
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: '-- -h'
  lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: 'rustfmt, clippy'
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: '--all -- --check'
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: '-- -D warnings'
  build:
    needs:
      - lints
      - test
      - check
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ''
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - id: get_repository_name
        run: echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")" >> "$GITHUB_ENV"
        shell: bash
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: 'toml-cli'
      - uses: actions-rs/cargo@v1
        env:
          VERSION: '${{ github.ref_name }}'
        with:
          command: build
          args: '--release'
      - uses: actions/upload-artifact@v4
        with:
          name: ${{env.REPOSITORY_NAME}}-${{ matrix.target }}
          path: ./target/release/${{env.REPOSITORY_NAME}}${{ matrix.suffix }}
  release:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          lfs: true

      - id: get_repository_name
        run: echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")" >> "$GITHUB_ENV"
        shell: bash

      - uses: actions/download-artifact@v4
        with:
          name: ${{env.REPOSITORY_NAME}}-x86_64-unknown-linux-gnu
          path: x86_64-unknown-linux-gnu

      - uses: actions/download-artifact@v4
        with:
          name: ${{env.REPOSITORY_NAME}}-x86_64-apple-darwin
          path: x86_64-apple-darwin

      - uses: actions/download-artifact@v4
        with:
          name: ${{env.REPOSITORY_NAME}}-x86_64-pc-windows-msvc
          path: x86_64-pc-windows-msvc

      - id: strip_linux
        run: strip ./x86_64-unknown-linux-gnu/${{env.REPOSITORY_NAME}}
        shell: bash

      - id: generate_changelog
        run: sed -n '/## desec_cli '${{ github.ref_name }}'/,/## desec_cli/{//!p}' CHANGELOG.md > gh-workflow-changes.txt
        shell: bash

      - id: rename_artifacts
        run: mv ./x86_64-unknown-linux-gnu/${{env.REPOSITORY_NAME}} ./${{env.REPOSITORY_NAME}}-x86_64-unknown-linux-gnu
        shell: bash

      - id: rename_artifacts
        run: mv ./x86_64-apple-darwin/${{env.REPOSITORY_NAME}} ./${{env.REPOSITORY_NAME}}-x86_64-apple-darwin
        shell: bash

      - id: rename_artifacts
        run: mv ./x86_64-pc-windows-msvc/${{env.REPOSITORY_NAME}}.exe ./${{env.REPOSITORY_NAME}}-x86_64-pc-windows-msvc
        shell: bash

      - name: create_release
        run: gh release create v${{ github.ref_name }} --title 'Release ${{ github.ref_name }}' --notes-file gh-workflow-changes.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload_x86_64-unknown-linux-gnu
        run: gh release upload v${{ github.ref_name }} ./${{env.REPOSITORY_NAME}}-x86_64-unknown-linux-gnu
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload_x86_64-apple-darwin
        run: gh release upload v${{ github.ref_name }} ./${{env.REPOSITORY_NAME}}-x86_64-apple-darwin
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload_x86_64-pc-windows-msvc
        run: gh release upload v${{ github.ref_name }} ./${{env.REPOSITORY_NAME}}-x86_64-pc-windows-msvc
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
